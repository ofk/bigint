// スピードテスト
// A: 321（十分に小さい数）
// B: 54321（小さい数、ただし二乗すると32bitを超える）
// C: 1234567（やや大きい数）
// D: 2147483648（int上限超えの2^31）
// E: （20桁以上の極めて大きな数）

var total_ms = 0;
var start = new Date;

//* 生成テスト。
writeHead('生成テスト');

test_gen(321);
test_gen(54321);
test_gen(1234567);
test_gen('321');
test_gen('54321');
test_gen('1234567');
test_gen('2147483648');
test_gen('12345678901234567890123456789012345678901234567890123456789012345678901234567890');
test_gen('1.23456789e+30', '1234567890000000000000000000000');
test_gen('0b1110100000110010010010000001110101110000001101101111110011101110001010110010111100010111111001011011001110001111110000101011010010', '1234567890123456789012345678901234567890');
test_gen('0o16406222016560155763561262742771331617605322', '1234567890123456789012345678901234567890');
test_gen('016406222016560155763561262742771331617605322', '1234567890123456789012345678901234567890');
test_gen('0x3a0c92075c0dbf3b8acbc5f96ce3f0ad2', '1234567890123456789012345678901234567890');
test_gen('0x6a9e8ea23cb63c228f31ad9268b4097f156d6aa11dcb29f14baccff196ce3f0ad2', '12345678901234567890123456789012345678901234567890123456789012345678901234567890');

test_gen(-321);
test_gen(-54321);
test_gen(-1234567);
test_gen('-321');
test_gen('-54321');
test_gen('-1234567');
test_gen('-2147483648');
test_gen('-12345678901234567890123456789012345678901234567890123456789012345678901234567890');
test_gen('-1.23456789e+30', '-1234567890000000000000000000000');
test_gen('-0b1110100000110010010010000001110101110000001101101111110011101110001010110010111100010111111001011011001110001111110000101011010010', '-1234567890123456789012345678901234567890');
test_gen('-0o16406222016560155763561262742771331617605322', '-1234567890123456789012345678901234567890');
test_gen('-016406222016560155763561262742771331617605322', '-1234567890123456789012345678901234567890');
test_gen('-0x3a0c92075c0dbf3b8acbc5f96ce3f0ad2', '-1234567890123456789012345678901234567890');
test_gen('-0x6a9e8ea23cb63c228f31ad9268b4097f156d6aa11dcb29f14baccff196ce3f0ad2', '-12345678901234567890123456789012345678901234567890123456789012345678901234567890');

function test_gen(val, res) {
	var name = 'new Bigint(' + JSON.stringify(val) + ')';
	var N = new Bigint(val);
	if (N.toString(10) !== (res || '' + val)) {
		write(name, 0, N.toString());
		return;
	}
	var start = new Date;
	for (var i = 0; i < 10000; ++i) new Bigint(val);
	var ms = new Date - start;
	total_ms += ms;
	write(name, ms);
}
//*/

//* 足し算引き算テスト
test_method('add', 0, 10000, '321', '662071');
test_method('add', 1, 10000, '54321', '50059321');
test_method('add', 1, 10000, '1234567', '51239567');
test_method('add', 2, 10000, '2147483648', '498647529598');
test_method('add', 10, 10000, '1234567890123456789012345678901234567890', '10000149502684623389768952884026436728587738663340');
test_method('add', 0, 10000, '-321', '661429');
test_method('add', 1, 10000, '-54321', '49950679');
test_method('add', 1, 10000, '-1234567', '48770433');
test_method('add', 2, 10000, '-2147483648', '494352562302');
test_method('add', 10, 10000, '-1234567890123456789012345678901234567890', '10000149500215487609522039306001745370785269527560');
test_method('add', 0, 10000, '662071', '1323821');
test_method('add', 1, 10000, '50059321', '100064321');
test_method('add', 1, 10000, '51239567', '101244567');
test_method('add', 2, 10000, '498647529598', '995147575548');
test_method('add', 10, 10000, '10000149502684623389768952884026436728587738663340', '20000299004134678889414448979040527778274242758790');
test_method('add', 0, 10000, '-662071', '-321');
test_method('add', 1, 10000, '-50059321', '-54321');
test_method('add', 1, 10000, '-51239567', '-1234567');
test_method('add', 2, 10000, '-498647529598', '-2147483648');
test_method('add', 10, 10000, '-10000149502684623389768952884026436728587738663340', '-1234567890123456789012345678901234567890');

test_method('sub', 0, 10000, '321', '-661429');
test_method('sub', 1, 10000, '54321', '-49950679');
test_method('sub', 1, 10000, '1234567', '-48770433');
test_method('sub', 2, 10000, '2147483648', '-494352562302');
test_method('sub', 10, 10000, '1234567890123456789012345678901234567890', '-10000149500215487609522039306001745370785269527560');
test_method('sub', 0, 10000, '-321', '-662071');
test_method('sub', 1, 10000, '-54321', '-50059321');
test_method('sub', 1, 10000, '-1234567', '-51239567');
test_method('sub', 2, 10000, '-2147483648', '-498647529598');
test_method('sub', 10, 10000, '-1234567890123456789012345678901234567890', '-10000149502684623389768952884026436728587738663340');
test_method('sub', 0, 10000, '662071', '321');
test_method('sub', 1, 10000, '50059321', '54321');
test_method('sub', 1, 10000, '51239567', '1234567');
test_method('sub', 2, 10000, '498647529598', '2147483648');
test_method('sub', 10, 10000, '10000149502684623389768952884026436728587738663340', '1234567890123456789012345678901234567890');
test_method('sub', 0, 10000, '-662071', '-1323821');
test_method('sub', 1, 10000, '-50059321', '-100064321');
test_method('sub', 1, 10000, '-51239567', '-101244567');
test_method('sub', 2, 10000, '-498647529598', '-995147575548');
test_method('sub', 10, 10000, '-10000149502684623389768952884026436728587738663340', '-20000299004134678889414448979040527778274242758790');

test_method('mul', 0, 1000, '321', '21733841872216923023727365039031391996580644988307406256128579314334023627924462057845457884902173176878249370652295130735077842521444921276048918062115971139317667339847634662058180310325700435611760019051953220549395418085419651815081438704899028442735461089381965291471235600484737057593351116598894032736643763462772864491099361658145602060623414869148372883354699043289800271046713781800940299432764521238322706395080135583297380198015607027261152869473348801657713008769653235928202866593065016544118496204040840766304690724764845091413603286309298190181757738326171480827852729861803229123284925306768217264275676541082402903113610022214504526114487353047271723472593371622772988036034159459542988474571157812266793464990451053697223713473031649687917653429260776732894951515949403273603694137302654617816916403172750856868523587164621347256596290312507451864070755217228522571421942350995729095472889186950543214088495833526428727326361019349771631589620802234854456077033293436097123157903704850432000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
test_method('mul', 1, 1000, '54321', '21858078354647810872667459913131499508262161998790229554411754934464689932005927027580433449220665038166873461294521887100930776207950995728078811751501060127571096486513933712550418281768619139206942542764014394162049542098301905472642284379292325026474372359513431878639651033590302393534858601294743175208778951504429548739982747672727354020495848779624130908449797510688122406422384446987038676042473277901753317827259587848344459188181858293901694890240805329321935824599988091301690700830639779495310139616826530122326502538905203007511657536022450493393394443730961572894458889449678782214890446956235437576901606204994871498472477052670446036585755585411883584015167687190550012429784895378817731912148002295640003051320403965857068720401278263725182534153864584524455605469288063671666077934762486772522158621389831009624246924714397190184817085164074506628237477101098487155628366395068953490063081117738200479269989655284232394021953001456828341161892917657600077706397366542187319156769552603749465473238374516246314901146592180226467713531719930046596577659485894138334634348154594523822732868757414438430221736028213184029677404066358044477058596044849534213300312324978628489714462070301527195689085279630743116075415572744325823568868366827240490844111268545942778205021790105229428631800670923972353741153163520987128135464797599695566439292780204741774668474795968639509885924069330870148679555063152661531959031978641726974288362413346112846743869856963752053570981154291194489892967206427375687628799473670489719485465797451109661256283751659520977359916474073984420361664484410090202068464218114068090890388357416209190546621070771945558000208361308545689647810350414552285195042021631690808679907175276942662018892572981042376459223090794382868792846320553153995547427113676722525127523455480705028663436099274438842979512133601835255282787547878193070077454061782752133503485194214402605607082793535427354260730638030752713328109897107315088148219788596155141218817636092814778131891604266847374760870702433090385895607186165745677603560146728951824108583545927723407817473339492425683303378692125049251100755816091777930726485334809132912214855568469598325478011849611169608180020295045289511721404610182786363635908939951888728296253544921611038213649914014632600244439935943293446743302877596352512000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
test_method('mul', 2, 1000, '1234567', '70522849491040406363549882463738269326866609149305893798765753541249029660758693444500068633634431802995942074153055979581189344013232617305011699247821578959363760534542917079339225429723214255286621261605566375092807673101035520477433623042032409267254653951049406330834673657663817339121724258422509562124706853622691713787783321217451078668116838826721865173283034523833860447323707782480552409833482312138911181485944513134051821267883917850087958819366454340815056438701679896540265527416225326344895219826813039513566378241454512063498985085679683388429222866681600945232039608674766490656860276022021555523722093572937958764464309319148259339148903516298692193175703000538749555485113722020928327518895062433127179966144459218694761403602699634303056053896080874306429465311335489947479064246933908082245341428009728653593013963103181145636372634152639283565850020232775179418285003812558490083168423923491568940359387424673237490990596993348275847721387166575889439099925634399724687675782137847719031537718214400521800573617652032187357460804297689987731466870936520721749974507347016219926220168944602072099735183534583178208566763791757936047243193958964592402713470384838813359630504738422230502688984512104923753922749973337864252709511217814368706101260204145838982283368606871734504419997665421449260097242164013831490995795971674640912636571079742241963349806780258316924757100153038826596790401204504368453826178623012858080308675779334245331038317850075180063374004623526775378037800998368597287708507349280488374788292277567102021662682461668393102605825491482371930293366386603365777486995732487290237370764113281075573121473904519389974546519822956780446809776455226015072755285812549739127292387985301325723743452851769913449887501111107338934894772526466939486496260629471860780957359896632030372227484325726668732611089465995039841588787718907077371417213778797476865844786825825846934325967654962922274134510005925269139270611390564994052294928347431454609325394722714719535077576273201331351743278883548916692556319573106769451168149452219681648035904325049921330459321982699954014806263727808571759719138068147044687259931335944103407692614667518670868771684472575776096946042154458083087661881681865241891334994380760319606325285016925157669012674691560765311776843293592346050761828204776433636322453627881522040582419099405472896452399300338123862234798416503299875702950034121228688136919417026555812667167681424825167899394507722127190321344278116908072887699573172997970391352257570340994565885707468583163141741544461744503830801833465756405344173152947892165858260934831833912429890799283980407719051174860725730797357135214506966221535584736861423704591926502607635563321674718738788380629105673656905241723654585650675471666000178195884858635595112820954616883497850980669139433555514838713884395811398894988682561746166098275365035830328260412941583035353272334445916741937833321100138867411438624275800882304074170521874616011620674722427152647719809137189070124839019638183409490817733179741541338271766125712124387267126357181788089130543745099629065907087977129897758784198514749799027772650406469655267652048145865503971309875206665366607420796364040449916440243344597795146608282012523110813194250728176260182661454200616897949989119972967023830245828716969032565856027187628815927189862169799747375705718845558972606124754223039134856228994024190779167842327380094690366039928958214926280066026794923688095614253103472308130240020635903762262393200022154080095285664611917188161852590398510270837457938616486246818894359607636635751806579028828275100605781148613252814089001314489858483687416528298348026963860641323381403529875457569904019095483627746639408312290072070851676244563992690678780223175024671750290509822324495909531481311311903520741107740513279623072744394100623126269227476770801969467328826995836810138536345221949197283478827542976284231183622924924727112461194110141698698296788786486439507097635596777975481141692359563698365042747539357740847237980025521795155978165580516791314614790115370155949598176373164635493738603951319417563567837159074462138886053138657684436745938154502783065001896304985293369282347308304149373147451979518021665431094872677847793697199564630909200973489787503734747973316444936774674830077390019801373958084093304036598442772005437024374432816150571079460844914551278860831342454798381449585400220161498925290036595315303284022649970375007272433385035432294786074094435682533123517496331807127787025633585302418879207180515532887631786043215040354466410919346205735731461457048278756842392463774886041081192553982566265633289932590100015714208304526836459329337768940930176864444551484316500056420836336132450963731292678500372051257189360471575624517286493079461417409193563216659388200267152467858191496253736803837709635099184231744033407700936357620658903421638169126891633722601338552254070891326697299671198940337747492076205024887720261045801295983831433353412192385617496089230723961261322147895181061631323934575016590186287345652735376487511031761573976609658521996094686857115637239269921130871140686284603569808687985592309855644664227268212038724799510042912087952353418218941035127998716999612559375344861184000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');

//test_method('div', 0, 1000, '21733841872216923023727365039031391996580644988307406256128579314334023627924462057845457884902173176878249370652295130735077842521444921276048918062115971139317667339847634662058180310325700435611760019051953220549395418085419651815081438704899028442735461089381965291471235600484737057593351116598894032736643763462772864491099361658145602060623414869148372883354699043289800271046713781800940299432764521238322706395080135583297380198015607027261152869473348801657713008769653235928202866593065016544118496204040840766304690724764845091413603286309298190181757738326171480827852729861803229123284925306768217264275676541082402903113610022214504526114487353047271723472593371622772988036034159459542988474571157812266793464990451053697223713473031649687917653429260776732894951515949403273603694137302654617816916403172750856868523587164621347256596290312507451864070755217228522571421942350995729095472889186950543214088495833526428727326361019349771631589620802234854456077033293436097123157903704850432000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000', '321');
//test_method('div', 0, 100, '123456789022345678903234567890423456789052345678906234567890723456789082345678909234567890123456789022345678903234567890423456789052345678906234567890723456789082345678909234567890', '73068792898728680397135194747277263954398829017869890005110146748979892477902561141377906266610206697857');
//test_method('div', 0, 50, '333333333333333333555555555555555555777777777777777777999999999999999999111111111111111111333333333333333333555555555555555555777777777777777777999999999999999999111111111111111111', '581443713390997744586645859122235309515339626187298539582181077980075204231193193815974427494788325347574318050066522820941091844634185368078322391094');
//test_method('div', 0, 25, '888888888888444444444444000000000000666666666666222222222222888888888888444444444444000000000000666666666666222222222222', '9690334973385898113517211788475758752123718308227512704788879644929505707571638894440869408543388612058500271');
//*/

// 合計実行時間。
writeHead('合計実行時間');
write('run', total_ms);
writeHead('全体実行時間');
write('all', new Date - start);

// テスト関数。
function test_method(method, cnt, len, seed, ans) {
	var N = new Bigint(seed);
	var NS = [];
	for (var i = 1; i <= len; ++i) {
		var s = '';
		if (!cnt) {
			s += Math.sqrt(i) | 0;
		}
		else {
			for (var j = 0; j < cnt; ++j) s += i;
		}
		NS.push(new Bigint(s));
	}
	var start = new Date;
	for (var i = 0, iz = NS.length; i < iz; ++i) N = N[method](NS[i]);
	var ms = new Date - start;
	total_ms += ms;
	write([].join.call(arguments, ', ').slice(0, 50), ms, N.toString(10) !== ans ? N.toString(10) : null);
}

// 書き出し関数。
function h(str) {
	return ('' + str).replace(/&/g, '&amp;')
	                 .replace(/</g, '&lt;')
	                 .replace(/>/g, '&gt;')
	                 .replace(/"/g, '&quot;');
}
function writeHead(str) {
	document.writeln('<h1>' + h(str) + '</h1>');
}
function writeText(str) {
	document.writeln('<div>' + h(str) + '</div>');
}
function write(name, time, stat) {
	writeText((stat ? '! ' : '') + name + ': ' + (stat ? 'error @ ' +  stat : time + ' ms'));
}
